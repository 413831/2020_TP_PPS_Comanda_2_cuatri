{"version":3,"sources":["webpack:///src/app/pages/lista-de-espera/lista-de-espera.page.scss","webpack:///src/app/pages/lista-de-espera/lista-de-espera.module.ts","webpack:///src/app/pages/lista-de-espera/lista-de-espera-routing.module.ts","webpack:///src/app/pages/lista-de-espera/lista-de-espera.page.html","webpack:///src/app/pages/lista-de-espera/lista-de-espera.page.ts"],"names":["ListaDeEsperaPageModule","imports","declarations","routes","path","component","ListaDeEsperaPageRoutingModule","forChild","exports","ListaDeEsperaPage","clienteService","UIVisual","pedidosService","mesasService","asignandoMesa","leer","then","clientes","filter","cliente","enListaDeEspera","console","log","mesas","actualizar","ok","presentToast","clienteActual","presentAlert","nombre","mesa","mensaje","numero","crear","CrearPedido","Date","now","ASIGNADO","selector","template"],"mappings":"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","file":"lista-de-espera-lista-de-espera-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xpc3RhLWRlLWVzcGVyYS9saXN0YS1kZS1lc3BlcmEucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListaDeEsperaPageRoutingModule } from './lista-de-espera-routing.module';\n\nimport { ListaDeEsperaPage } from './lista-de-espera.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListaDeEsperaPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [ListaDeEsperaPage]\n})\nexport class ListaDeEsperaPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListaDeEsperaPage } from './lista-de-espera.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListaDeEsperaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListaDeEsperaPageRoutingModule {}\n","export default \"<app-header titulo=\\\"Lista de espera\\\" paginaAnterior='/tabs/tab1'></app-header>\\n<!-- <ion-grid *ngIf=\\\"!clientes\\\">\\n  <ion-row justify-content-center align-items-center >\\n    <div text-center>\\n      <ion-text color=\\\"dark\\\"> <h4>NO HAY CLIENTES EN ESPERA</h4>   </ion-text>\\n    </div>\\n  </ion-row>\\n</ion-grid> -->\\n\\n  <ion-toolbar color=\\\"light\\\" *ngIf=\\\"!asignandoMesa\\\">\\n    <ion-title>Hay {{clientes.length}} clientes en espera</ion-title>\\n  </ion-toolbar>\\n<!-- <ion-content *ngIf=\\\"!asignandoMesa\\\">\\n  <ion-grid >\\n  <ion-row justify-content-center align-items-center >\\n    <div text-center>\\n      <ion-text color=\\\"dark\\\"><h1>Hay {{clientes.length}} clientes en espera</h1> </ion-text>\\n    </div>\\n  </ion-row>\\n</ion-grid>\\n</ion-content> -->\\n\\n<div *ngIf=\\\"!asignandoMesa\\\">\\n  <ion-list *ngFor=\\\"let cliente of clientes\\\">\\n  <ion-item>\\n\\n    <ion-item-sliding>\\n      <ion-item-options side=\\\"start\\\">\\n        <ion-item-option color=\\\"danger\\\" expandable (click)=\\\"quitarDeLaLista(cliente)\\\">\\n          Quitar de la lista\\n        </ion-item-option>\\n      </ion-item-options>\\n\\n      <ion-item>\\n        <ion-label>{{cliente.nombre}} {{cliente.apellido}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option color=\\\"tertiary\\\" expandable (click)=\\\"verMesas(cliente)\\\">\\n          Asignar Mesa\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-item>\\n</ion-list>\\n</div>\\n\\n<ion-content>\\n  <app-listado-mesas *ngIf=\\\"asignandoMesa\\\" [mesas]=\\\"mesas\\\" (elegirMesa)=\\\"asignarMesa($event)\\\">\\n</app-listado-mesas>\\n</ion-content>\\n\";","import { Component, DoCheck, OnInit } from '@angular/core';\nimport { Cliente } from 'src/app/clases/cliente';\nimport { Mesa } from 'src/app/clases/mesa';\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\nimport { ClienteService } from 'src/app/services/cliente.service';\nimport { MesaService } from 'src/app/services/mesa.service';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { UIVisualService } from 'src/app/services/uivisual.service';\n\n@Component({\n  selector: 'app-lista-de-espera',\n  templateUrl: './lista-de-espera.page.html',\n  styleUrls: ['./lista-de-espera.page.scss'],\n})\nexport class ListaDeEsperaPage implements OnInit, DoCheck\n{\n\n  asignandoMesa: boolean = false;\n  clientes: Cliente[];\n  mesas: Mesa[];\n  clienteActual: Cliente;\n\n  constructor(\n    private clienteService: ClienteService,\n    private UIVisual: UIVisualService,\n    private pedidosService: PedidoService,\n    private mesasService: MesaService,\n  )\n  {\n    this.clienteService.leer().then(clientes =>\n    {\n      this.clientes = clientes.filter(cliente => cliente.enListaDeEspera == true);\n      console.log(this.clientes);\n    })\n    this.mesasService.leer().then(mesas =>\n    {\n      this.mesas = mesas/* .filter(mesa=>{mesa.isAvailable == true}) */\n    })\n\n  }\n\n  ngDoCheck(): void\n  {\n    this.clientes = ClienteService.clientes.filter(cliente => cliente.enListaDeEspera == true);\n    this.mesas = MesaService.mesas;/* .filter(mesa=>{mesa.isAvailable == true}) */\n  }\n\n\n  ngOnInit() \n  {\n\n  }\n\n  quitarDeLaLista(cliente: Cliente)\n  {\n    cliente.enListaDeEspera = false;\n    this.clienteService.actualizar(cliente).then(ok =>\n    {\n      UIVisualService.presentToast('Removido correctamente.');\n    });\n  }\n\n  verMesas(cliente: Cliente)\n  {\n    this.clienteActual = cliente;\n    this.asignandoMesa = true;\n    UIVisualService.presentAlert('Cliente ' + cliente.nombre, 'Asigne una mesa.');\n  }\n\n  asignarMesa(mesa: Mesa)\n  {\n    let mensaje = 'Mesa:' + mesa.numero + ' asignada.';\n    this.pedidosService.crear(Pedido.CrearPedido('', this.clienteActual, mesa, null, Date.now(), null, null, EstadoPedido.ASIGNADO, true)).then(() =>\n    {\n      //Se envia push al cliente avisando que es su turno y un redireccionamiento al pedidos page\n      UIVisualService.presentAlert('Mesa Asignada', mensaje);\n      this.asignandoMesa = false;\n    })\n\n  }\n\n}\n"]}