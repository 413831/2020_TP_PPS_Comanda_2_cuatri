{"version":3,"sources":["webpack:///src/app/pages/qr-ingreso-local/qr-ingreso-local-routing.module.ts","webpack:///src/app/pages/qr-ingreso-local/qr-ingreso-local.module.ts","webpack:///src/app/pages/qr-ingreso-local/qr-ingreso-local.page.ts","webpack:///src/app/pages/qr-ingreso-local/qr-ingreso-local.page.html","webpack:///src/app/pages/qr-ingreso-local/qr-ingreso-local.page.scss"],"names":["routes","path","component","QrIngresoLocalPageRoutingModule","imports","forChild","exports","QrIngresoLocalPageModule","declarations","QrIngresoLocalPage","scannerService","mesasService","router","toastController","escanear","then","data","console","log","text","usuarioLogueado","JSON","parse","sessionStorage","getItem","tieneMesa","nroMesa","reservas","forEach","reserva","cliente","correo","mesa","numero","presentToast","estaEnLista","listaEspera","lista","dni","datos","err","traerListaEspera","message","duration","create","toast","present","leer","mesas","selector","template"],"mappings":"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","file":"qr-ingreso-local-qr-ingreso-local-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { QrIngresoLocalPage } from './qr-ingreso-local.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QrIngresoLocalPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class QrIngresoLocalPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { QrIngresoLocalPageRoutingModule } from './qr-ingreso-local-routing.module';\r\n\r\nimport { QrIngresoLocalPage } from './qr-ingreso-local.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    QrIngresoLocalPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [QrIngresoLocalPage]\r\n})\r\nexport class QrIngresoLocalPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Cliente } from 'src/app/clases/cliente';\r\nimport { Mesa } from 'src/app/clases/mesa';\r\nimport { IListaEspera } from 'src/app/interfaces/IListaEspera';\r\nimport { CodigoQRService } from 'src/app/services/codigo-qr.service';\r\nimport { MesaService } from 'src/app/services/mesa.service';\r\n\r\n@Component({\r\n  selector: 'app-qr-ingreso-local',\r\n  templateUrl: './qr-ingreso-local.page.html',\r\n  styleUrls: ['./qr-ingreso-local.page.scss'],\r\n})\r\nexport class QrIngresoLocalPage implements OnInit\r\n{\r\n  reservas:Array<any>;\r\n  mesas:Array<Mesa>;\r\n  listaEspera:Array<IListaEspera>;\r\n  constructor(\r\n    private scannerService: CodigoQRService,\r\n    private mesasService:MesaService,\r\n    private router: Router,\r\n    private toastController: ToastController\r\n  ) { }\r\n\r\n  ngOnInit()\r\n  {\r\n  }\r\n\r\n  escanear()\r\n  {\r\n    this.scannerService.escanear(\"Escanear qr ingreso\", 'PDF_417').then((data) =>\r\n    {\r\n      console.log(data);\r\n\r\n\r\n      // VERIFICO CODIGO QR\r\n      if (data.text == \"IngresoLocal\")\r\n      {\r\n        //Buscar usuario actual del servicio de usuarios o auth o donde lo pongan y verificar con los datos que se guarden (seguramente el email) y perfil\r\n        let usuarioLogueado = JSON.parse(sessionStorage.getItem(\"usuario\"));\r\n\r\n        if (usuarioLogueado instanceof Cliente)//si es un cliente...\r\n        {\r\n          //puede ser cliente o anonimo \r\n          //ademas puede tener una mesa reservada o no\r\n          let tieneMesa: boolean = false;\r\n          let nroMesa: number;\r\n          //deberia checkiar las reservas \r\n          this.reservas.forEach(reserva =>\r\n          {\r\n            if (reserva.cliente == usuarioLogueado.correo)\r\n            {\r\n              tieneMesa = true;\r\n              nroMesa = reserva.mesa.numero;\r\n            }\r\n          });\r\n          if (tieneMesa)\r\n          {\r\n            this.presentToast(\"Usted tiene asignada la mesa\" + nroMesa, 2000);\r\n          } else //No tiene mesa le asigno una\r\n          {\r\n            let estaEnLista: boolean = false;\r\n            //verifico si ya esta en la lista de espera (en caso de que escanee dos veces)\r\n            this.listaEspera.forEach(lista =>\r\n            {\r\n              if (lista.cliente.dni == usuarioLogueado.dni) ///Deberia verificar por correo que es individual por usuario. Si es anonimo (ver las opciones de FireAuth para usuarios anonimos).\r\n              {\r\n                estaEnLista = true;\r\n              }\r\n            });\r\n            if (estaEnLista)\r\n            {\r\n              this.presentToast(\"Usted ya se encuentra en lista de espera\", 2000);\r\n            } else\r\n            {\r\n              // lo pongo en la lista con sus datos\r\n              let datos: any = { 'cliente':usuarioLogueado};\r\n              //Pushear la lista a la base\r\n              //Y lo mando a la page de encuestas de antiguos usuario\r\n            }\r\n          }\r\n        } else// Es un empleado\r\n        {\r\n          //\r\n        }\r\n      } else //No es un codigo de ingreso\r\n      {\r\n        this.presentToast('El codigo QR no pertenece al ingreso', 2000);\r\n      }\r\n    }, (err) =>//Onrejected qr scaner\r\n    {\r\n      console.log(\"Error: \" + err);\r\n    });\r\n\r\n    this.traerListaEspera();\r\n  }\r\n\r\n  async presentToast(message, duration)\r\n  {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration,\r\n    });\r\n    toast.present();\r\n  }\r\n  traerMesas()\r\n  {\r\n    this.mesasService.leer().then(mesas =>\r\n    {\r\n      this.mesas = mesas;\r\n    });\r\n  }\r\n  TraerReservas(){\r\n\r\n  }\r\n\r\n  traerListaEspera()\r\n  {\r\n    //traer lalista de espera.\r\n  }\r\n\r\n}\r\n","export default \"<app-header titulo=\\\"Qr Ingreso\\\" paginaAnterior='/tabs/tab1'></app-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-button color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"escanear()\\\">Escanear</ion-button>\\r\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3FyLWluZ3Jlc28tbG9jYWwvcXItaW5ncmVzby1sb2NhbC5wYWdlLnNjc3MifQ== */\";"]}