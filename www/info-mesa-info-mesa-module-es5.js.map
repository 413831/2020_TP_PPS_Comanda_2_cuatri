{"version":3,"sources":["webpack:///src/app/pages/info-mesa/info-mesa.module.ts","webpack:///src/app/services/date.service.ts","webpack:///src/app/pages/info-mesa/info-mesa.page.scss","webpack:///src/app/pages/info-mesa/info-mesa.page.html","webpack:///src/app/pages/info-mesa/info-mesa.page.ts","webpack:///src/app/pages/info-mesa/info-mesa-routing.module.ts"],"names":["InfoMesaPageModule","imports","declarations","DateService","date","getTime","timeStamp","Date","stringISO","parse","fecha","anio","getFullYear","mes","getMonth","dia","getDate","horas","getHours","minutos","getMinutes","newDate","minutosASumar","nuevoHorario","minutosARestar","isoLocalTime","toString","toLocaleTimeString","console","log","providedIn","InfoMesaPage","route","mesaService","clienteService","pedidoService","dateService","buscarReserva","id","horaActual","pedido","pedidos","filter","cliente","mesa","estado","RESERVADO","compararFechas","toDate","fechaInicio","usuario","fechaA","fechaB","selector","template","routes","path","component","InfoMesaPageRoutingModule","forChild","exports"],"mappings":"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","file":"info-mesa-info-mesa-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { InfoMesaPageRoutingModule } from './info-mesa-routing.module';\r\n\r\nimport { InfoMesaPage } from './info-mesa.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    InfoMesaPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [InfoMesaPage]\r\n})\r\nexport class InfoMesaPageModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DateService\r\n{\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * convierte un objeto Date a timeStamp\r\n   * @param date \r\n   */\r\n  toTimeStamp(date: Date)\r\n  {\r\n    return date.getTime() / 1000000;\r\n  }\r\n\r\n  toDate(timeStamp)\r\n  {\r\n    let date = new Date(timeStamp * 1000000);\r\n    return date;\r\n  }\r\n\r\n  /**\r\n   * Convierte fecha en formato ISO a objeto Date con fecha local\r\n   * @param stringISO Fecha en formato ISO string\r\n   */\r\n  getDateObject(stringISO: string)\r\n  {\r\n    let timeStamp = Date.parse(stringISO);\r\n\r\n    let fecha = new Date(timeStamp);\r\n\r\n    let anio = fecha.getFullYear();\r\n    let mes = fecha.getMonth();\r\n    let dia = fecha.getDate();\r\n    let horas = fecha.getHours();\r\n    let minutos = fecha.getMinutes();\r\n\r\n    let newDate = new Date(anio, mes - 1, dia, horas, minutos, 0, 0);\r\n    return newDate;\r\n  }\r\n\r\n  /**Funcion para agregar minutos a un timeStamp\r\n * @param timeStamp TimeStamp\r\n * @param minutosAAgregar Minutos a agregar\r\n * @returns TimeStamp con los minutos agregados\r\n */\r\n  sumarMinutos(timeStamp, minutosASumar): number\r\n  {\r\n    let nuevoHorario = timeStamp + (minutosASumar * 60);\r\n    return nuevoHorario;\r\n  }\r\n\r\n  restarMinutos(timeStamp, minutosARestar): number\r\n  {\r\n    let nuevoHorario = timeStamp - (minutosARestar * 60);\r\n    return nuevoHorario;\r\n  }\r\n\r\n  /**\r\n   * Obtiene fecha local en formato ISO string\r\n   * @param date \r\n   */\r\n  getIsoLocalTime(date)\r\n  {\r\n    let isoLocalTime = date.getFullYear().toString() + '-';\r\n    if ((date.getMonth() + 1) < 10)\r\n    {\r\n      isoLocalTime += '0' + (date.getMonth() + 1) + '-';\r\n    } else\r\n    {\r\n      isoLocalTime += (date.getMonth() + 1) + '-';\r\n    }\r\n    if (date.getDate() < 10)\r\n    {\r\n      isoLocalTime += '0' + (date.getDate()) + 'T';\r\n    }\r\n    else\r\n    {\r\n      isoLocalTime += date.getDate() + 'T';\r\n    }\r\n    isoLocalTime += date.toLocaleTimeString();\r\n    console.log('Mi ISOtimeString', isoLocalTime);\r\n    return isoLocalTime;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZm8tbWVzYS9pbmZvLW1lc2EucGFnZS5zY3NzIn0= */\";","export default \"<ion-content class=\\\"fondo\\\">\\r\\n  <ion-grid fixed id=\\\"container\\\">\\r\\n    <ion-row *ngIf=\\\"pedido\\\">\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-justify-content-center\\\">\\r\\n        <!-- Aca debería ir el componente con la reserva actual -->\\r\\n        <app-detalle-reserva [reserva]=\\\"pedido\\\"></app-detalle-reserva>\\r\\n        <app-detalle-pedido [pedido]=\\\"pedido\\\"></app-detalle-pedido>\\r\\n        <ion-button (click)=\\\"consultarAlMozo()\\\" expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\r\\n          Consultar al mozo\\r\\n        </ion-button>\\r\\n        <ion-button (click)=\\\"verEncuesta()\\\" expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\r\\n          Realizar encuesta\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!pedido\\\">\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <div id=\\\"container\\\">\\r\\n          <ion-label>\\r\\n            <h1>\\r\\n              <strong>Usted no está asignado a esta mesa</strong>\\r\\n            </h1>\\r\\n          </ion-label>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Mesa } from 'src/app/clases/mesa';\r\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\r\nimport { Usuario } from 'src/app/clases/usuario';\r\nimport { ClienteService } from 'src/app/services/cliente.service';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { MesaService } from 'src/app/services/mesa.service';\r\nimport { PedidoService } from 'src/app/services/pedido.service';\r\n\r\n@Component({\r\n  selector: 'app-info-mesa',\r\n  templateUrl: './info-mesa.page.html',\r\n  styleUrls: ['./info-mesa.page.scss'],\r\n})\r\nexport class InfoMesaPage implements OnInit\r\n{\r\n  usuario: Usuario;\r\n  pedido: Pedido;\r\n  horaActual: Date;\r\n\r\n  constructor(private route: ActivatedRoute, private mesaService: MesaService,\r\n    private clienteService: ClienteService, private pedidoService: PedidoService,\r\n    private dateService: DateService) \r\n  {\r\n    // Se recibe id de Mesa asignada y id de Cliente\r\n    // this.route.params.subscribe(params =>\r\n    // {\r\n    //   console.log(params['id']);\r\n    //   this.buscarReserva(params['id']);\r\n    //   //this.clienteService.fetch(idCliente)\r\n    // });\r\n    //\r\n    // Codigo para testing\r\n    this.buscarReserva(\"-MLOssaEI7D5pr7Q8OMl\");\r\n  }\r\n\r\n  ngOnInit() \r\n  {\r\n  }\r\n\r\n  async buscarReserva(id: string)\r\n  {\r\n    let horaActual = new Date();\r\n    // Se debería traer Entidad con información sobre Pedido y Cliente de Mesa\r\n\r\n    this.pedido = PedidoService.pedidos.filter(pedido =>\r\n    {\r\n      // Agregar validacion de hora actual\r\n      if (pedido.cliente && pedido.mesa)\r\n      {\r\n        return pedido.estado == EstadoPedido.RESERVADO &&\r\n          this.compararFechas(this.dateService.toDate(pedido.fechaInicio), horaActual) &&\r\n          pedido.mesa.id === id &&\r\n          pedido.cliente.id == this.usuario.id;\r\n      }\r\n    })[0];\r\n  }\r\n\r\n  verEncuesta()\r\n  {\r\n    console.log(\"Ver encuesta\");\r\n  }\r\n\r\n  consultarAlMozo()\r\n  {\r\n\r\n  }\r\n\r\n  compararFechas(fechaA: Date, fechaB: Date)\r\n  {\r\n    console.log(\"Fecha A - Fecha pedido\");\r\n    console.log(fechaA);\r\n    console.log(\"Fecha B- Fecha actual\");\r\n    console.log(fechaB);\r\n\r\n    if (fechaA.getFullYear() == fechaB.getFullYear() &&\r\n      fechaA.getMonth() === fechaB.getMonth() &&\r\n      fechaA.getDate() === fechaB.getMonth() &&\r\n      fechaA.getHours() === fechaB.getHours())\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InfoMesaPage } from './info-mesa.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: InfoMesaPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InfoMesaPageRoutingModule {}\r\n"]}