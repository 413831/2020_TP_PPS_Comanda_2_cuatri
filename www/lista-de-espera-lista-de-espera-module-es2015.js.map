{"version":3,"sources":["./src/app/pages/lista-de-espera/lista-de-espera.page.scss","./src/app/pages/lista-de-espera/lista-de-espera.module.ts","./src/app/pages/lista-de-espera/lista-de-espera-routing.module.ts","./src/app/pages/lista-de-espera/lista-de-espera.page.html","./src/app/pages/lista-de-espera/lista-de-espera.page.ts"],"names":[],"mappings":"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","file":"lista-de-espera-lista-de-espera-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xpc3RhLWRlLWVzcGVyYS9saXN0YS1kZS1lc3BlcmEucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ListaDeEsperaPageRoutingModule } from './lista-de-espera-routing.module';\r\n\r\nimport { ListaDeEsperaPage } from './lista-de-espera.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ListaDeEsperaPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [ListaDeEsperaPage]\r\n})\r\nexport class ListaDeEsperaPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListaDeEsperaPage } from './lista-de-espera.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListaDeEsperaPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ListaDeEsperaPageRoutingModule {}\r\n","export default \"<app-header titulo=\\\"Lista de espera\\\" paginaAnterior='/tabs/tab1'></app-header>\\r\\n<!-- <ion-grid *ngIf=\\\"!clientes\\\">\\r\\n  <ion-row justify-content-center align-items-center >\\r\\n    <div text-center>\\r\\n      <ion-text color=\\\"dark\\\"> <h4>NO HAY CLIENTES EN ESPERA</h4>   </ion-text>\\r\\n    </div>\\r\\n  </ion-row>\\r\\n</ion-grid> -->\\r\\n\\r\\n  <ion-toolbar color=\\\"light\\\" *ngIf=\\\"!asignandoMesa\\\">\\r\\n    <ion-title>Hay {{clientes.length}} clientes en espera</ion-title>\\r\\n  </ion-toolbar>\\r\\n<!-- <ion-content *ngIf=\\\"!asignandoMesa\\\">\\r\\n  <ion-grid >\\r\\n  <ion-row justify-content-center align-items-center >\\r\\n    <div text-center>\\r\\n      <ion-text color=\\\"dark\\\"><h1>Hay {{clientes.length}} clientes en espera</h1> </ion-text>\\r\\n    </div>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n</ion-content> -->\\r\\n\\r\\n<div *ngIf=\\\"!asignandoMesa\\\">\\r\\n  <ion-list *ngFor=\\\"let cliente of clientes\\\">\\r\\n  <ion-item>\\r\\n\\r\\n    <ion-item-sliding>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option color=\\\"danger\\\" expandable (click)=\\\"quitarDeLaLista(cliente)\\\">\\r\\n          Quitar de la lista\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>{{cliente.nombre}} {{cliente.apellido}}</ion-label>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"tertiary\\\" expandable (click)=\\\"verMesas(cliente)\\\">\\r\\n          Asignar Mesa\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-item>\\r\\n</ion-list>\\r\\n</div>\\r\\n\\r\\n<ion-content>\\r\\n  <app-listado-mesas *ngIf=\\\"asignandoMesa\\\" [mesas]=\\\"mesas\\\" (elegirMesa)=\\\"asignarMesa($event)\\\">\\r\\n</app-listado-mesas>\\r\\n</ion-content>\\r\\n\";","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Cliente } from 'src/app/clases/cliente';\r\nimport { Mesa } from 'src/app/clases/mesa';\r\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\r\nimport { ClienteService } from 'src/app/services/cliente.service';\r\nimport { MesaService } from 'src/app/services/mesa.service';\r\nimport { PedidoService } from 'src/app/services/pedido.service';\r\nimport { UIVisualService } from 'src/app/services/uivisual.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-de-espera',\r\n  templateUrl: './lista-de-espera.page.html',\r\n  styleUrls: ['./lista-de-espera.page.scss'],\r\n})\r\nexport class ListaDeEsperaPage implements OnInit , DoCheck\r\n{\r\n\r\n  asignandoMesa:boolean = false;\r\n  clientes: Cliente[];\r\n  mesas: Mesa[];\r\n  clienteActual:Cliente;\r\n\r\n  constructor(\r\n    private clienteService: ClienteService,\r\n    private UIVisual: UIVisualService,\r\n    private pedidosService:PedidoService,\r\n    private mesasService:MesaService,\r\n  )\r\n  {\r\n    this.clienteService.leer().then(clientes=>{\r\n      this.clientes = clientes.filter(cliente => cliente.enListaDeEspera == true);\r\n      console.log(this.clientes);\r\n    })\r\n    this.mesasService.leer().then(mesas=>{\r\n     this.mesas = mesas/* .filter(mesa=>{mesa.isAvailable == true}) */\r\n    })\r\n    \r\n  }\r\n\r\n  ngDoCheck(): void\r\n  {\r\n    this.clientes = ClienteService.clientes.filter(cliente => cliente.enListaDeEspera == true);\r\n    this.mesas = MesaService.mesas;/* .filter(mesa=>{mesa.isAvailable == true}) */\r\n  }\r\n\r\n\r\n  ngOnInit() \r\n  {\r\n\r\n  }\r\n\r\n  quitarDeLaLista(cliente:Cliente){\r\n    cliente.enListaDeEspera = false;\r\n    this.clienteService.actualizar(cliente).then(ok=>{\r\n      UIVisualService.presentToast('Removido correctamente.');\r\n    });\r\n  }\r\n\r\n  verMesas(cliente:Cliente){\r\n    this.clienteActual = cliente;\r\n    this.asignandoMesa = true;\r\n    UIVisualService.presentAlert('Cliente '+cliente.nombre,'Asigne una mesa.');\r\n  }\r\n\r\n  asignarMesa(mesa:Mesa){\r\n    let mensaje = 'Mesa:'+mesa.numero+ ' asignada.';    \r\n    this.pedidosService.crear(Pedido.CrearPedido('',this.clienteActual,mesa,null,Date.now(),null,null,EstadoPedido.RESERVADO,true)).then(()=>{\r\n      //Se envia push al cliente avisando que es su turno y un redireccionamiento al pedidos page\r\n      UIVisualService.presentAlert('Mesa Asignada',mensaje);\r\n      this.asignandoMesa = false;\r\n    })\r\n    \r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}