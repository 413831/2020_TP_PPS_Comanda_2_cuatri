{"version":3,"sources":["./src/app/pages/lista-de-espera/lista-de-espera.page.scss","./src/app/pages/lista-de-espera/lista-de-espera.module.ts","./src/app/pages/lista-de-espera/lista-de-espera-routing.module.ts","./src/app/pages/lista-de-espera/lista-de-espera.page.html","./src/app/pages/lista-de-espera/lista-de-espera.page.ts"],"names":[],"mappings":"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","file":"lista-de-espera-lista-de-espera-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xpc3RhLWRlLWVzcGVyYS9saXN0YS1kZS1lc3BlcmEucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListaDeEsperaPageRoutingModule } from './lista-de-espera-routing.module';\n\nimport { ListaDeEsperaPage } from './lista-de-espera.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListaDeEsperaPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [ListaDeEsperaPage]\n})\nexport class ListaDeEsperaPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListaDeEsperaPage } from './lista-de-espera.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListaDeEsperaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListaDeEsperaPageRoutingModule {}\n","export default \"<app-header titulo=\\\"Lista de espera\\\" paginaAnterior='/tabs/tab1'></app-header>\\n<!-- <ion-grid *ngIf=\\\"!clientes\\\">\\n  <ion-row justify-content-center align-items-center >\\n    <div text-center>\\n      <ion-text color=\\\"dark\\\"> <h4>NO HAY CLIENTES EN ESPERA</h4>   </ion-text>\\n    </div>\\n  </ion-row>\\n</ion-grid> -->\\n\\n  <ion-toolbar color=\\\"light\\\" *ngIf=\\\"!asignandoMesa\\\">\\n    <ion-title>Hay {{clientes.length}} clientes en espera</ion-title>\\n  </ion-toolbar>\\n<!-- <ion-content *ngIf=\\\"!asignandoMesa\\\">\\n  <ion-grid >\\n  <ion-row justify-content-center align-items-center >\\n    <div text-center>\\n      <ion-text color=\\\"dark\\\"><h1>Hay {{clientes.length}} clientes en espera</h1> </ion-text>\\n    </div>\\n  </ion-row>\\n</ion-grid>\\n</ion-content> -->\\n\\n<div *ngIf=\\\"!asignandoMesa\\\">\\n  <ion-list *ngFor=\\\"let cliente of clientes\\\">\\n  <ion-item>\\n\\n    <ion-item-sliding>\\n      <ion-item-options side=\\\"start\\\">\\n        <ion-item-option color=\\\"danger\\\" expandable (click)=\\\"quitarDeLaLista(cliente)\\\">\\n          Quitar de la lista\\n        </ion-item-option>\\n      </ion-item-options>\\n\\n      <ion-item>\\n        <ion-label>{{cliente.nombre}} {{cliente.apellido}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option color=\\\"tertiary\\\" expandable (click)=\\\"verMesas(cliente)\\\">\\n          Asignar Mesa\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-item>\\n</ion-list>\\n</div>\\n\\n<ion-content>\\n  <app-listado-mesas *ngIf=\\\"asignandoMesa\\\" [mesas]=\\\"mesas\\\" (elegirMesa)=\\\"asignarMesa($event)\\\">\\n</app-listado-mesas>\\n</ion-content>\\n\";","import { Component, DoCheck, OnInit } from '@angular/core';\nimport { Cliente } from 'src/app/clases/cliente';\nimport { Mesa } from 'src/app/clases/mesa';\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\nimport { ClienteService } from 'src/app/services/cliente.service';\nimport { MesaService } from 'src/app/services/mesa.service';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { UIVisualService } from 'src/app/services/uivisual.service';\n\n@Component({\n  selector: 'app-lista-de-espera',\n  templateUrl: './lista-de-espera.page.html',\n  styleUrls: ['./lista-de-espera.page.scss'],\n})\nexport class ListaDeEsperaPage implements OnInit, DoCheck\n{\n\n  asignandoMesa: boolean = false;\n  clientes: Cliente[];\n  mesas: Mesa[];\n  clienteActual: Cliente;\n\n  constructor(\n    private clienteService: ClienteService,\n    private UIVisual: UIVisualService,\n    private pedidosService: PedidoService,\n    private mesasService: MesaService,\n  )\n  {\n    this.clienteService.leer().then(clientes =>\n    {\n      this.clientes = clientes.filter(cliente => cliente.enListaDeEspera == true);\n      console.log(this.clientes);\n    })\n    this.mesasService.leer().then(mesas =>\n    {\n      this.mesas = mesas/* .filter(mesa=>{mesa.isAvailable == true}) */\n    })\n\n  }\n\n  ngDoCheck(): void\n  {\n    this.clientes = ClienteService.clientes.filter(cliente => cliente.enListaDeEspera == true);\n    this.mesas = MesaService.mesas;/* .filter(mesa=>{mesa.isAvailable == true}) */\n  }\n\n\n  ngOnInit() \n  {\n\n  }\n\n  quitarDeLaLista(cliente: Cliente)\n  {\n    cliente.enListaDeEspera = false;\n    this.clienteService.actualizar(cliente).then(ok =>\n    {\n      UIVisualService.presentToast('Removido correctamente.');\n    });\n  }\n\n  verMesas(cliente: Cliente)\n  {\n    this.clienteActual = cliente;\n    this.asignandoMesa = true;\n    UIVisualService.presentAlert('Cliente ' + cliente.nombre, 'Asigne una mesa.');\n  }\n\n  asignarMesa(mesa: Mesa)\n  {\n    let mensaje = 'Mesa:' + mesa.numero + ' asignada.';\n    this.pedidosService.crear(Pedido.CrearPedido('', this.clienteActual, mesa, null, Date.now(), null, null, EstadoPedido.ASIGNADO, true)).then(() =>\n    {\n      //Se envia push al cliente avisando que es su turno y un redireccionamiento al pedidos page\n      UIVisualService.presentAlert('Mesa Asignada', mensaje);\n      this.asignandoMesa = false;\n    })\n\n  }\n\n}\n"],"sourceRoot":"webpack:///"}