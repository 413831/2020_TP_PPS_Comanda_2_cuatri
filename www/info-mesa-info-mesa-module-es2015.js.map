{"version":3,"sources":["./src/app/pages/info-mesa/info-mesa.module.ts","./src/app/services/date.service.ts","./src/app/pages/info-mesa/info-mesa.page.scss","./src/app/pages/info-mesa/info-mesa.page.html","./src/app/pages/info-mesa/info-mesa.page.ts","./src/app/pages/info-mesa/info-mesa-routing.module.ts"],"names":[],"mappings":"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","file":"info-mesa-info-mesa-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InfoMesaPageRoutingModule } from './info-mesa-routing.module';\n\nimport { InfoMesaPage } from './info-mesa.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InfoMesaPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [InfoMesaPage]\n})\nexport class InfoMesaPageModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService\n{\n\n  constructor() { }\n\n  /**\n   * convierte un objeto Date a timeStamp\n   * @param date \n   */\n  toTimeStamp(date: Date)\n  {\n    return date.getTime() / 1000000;\n  }\n\n  toDate(timeStamp)\n  {\n    let date = new Date(timeStamp * 1000000);\n    return date;\n  }\n\n  /**\n   * Convierte fecha en formato ISO a objeto Date con fecha local\n   * @param stringISO Fecha en formato ISO string\n   */\n  getDateObject(stringISO: string)\n  {\n    let timeStamp = Date.parse(stringISO);\n\n    let fecha = new Date(timeStamp);\n\n    let anio = fecha.getFullYear();\n    let mes = fecha.getMonth();\n    let dia = fecha.getDate();\n    let horas = fecha.getHours();\n    let minutos = fecha.getMinutes();\n\n    let newDate = new Date(anio, mes - 1, dia, horas, minutos, 0, 0);\n    return newDate;\n  }\n\n  /**Funcion para agregar minutos a un timeStamp\n * @param timeStamp TimeStamp\n * @param minutosAAgregar Minutos a agregar\n * @returns TimeStamp con los minutos agregados\n */\n  sumarMinutos(timeStamp, minutosASumar): number\n  {\n    let nuevoHorario = timeStamp + (minutosASumar * 60);\n    return nuevoHorario;\n  }\n\n  restarMinutos(timeStamp, minutosARestar): number\n  {\n    let nuevoHorario = timeStamp - (minutosARestar * 60);\n    return nuevoHorario;\n  }\n\n  /**\n   * Obtiene fecha local en formato ISO string\n   * @param date \n   */\n  getIsoLocalTime(date)\n  {\n    let isoLocalTime = date.getFullYear().toString() + '-';\n    if ((date.getMonth() + 1) < 10)\n    {\n      isoLocalTime += '0' + (date.getMonth() + 1) + '-';\n    } else\n    {\n      isoLocalTime += (date.getMonth() + 1) + '-';\n    }\n    if (date.getDate() < 10)\n    {\n      isoLocalTime += '0' + (date.getDate()) + 'T';\n    }\n    else\n    {\n      isoLocalTime += date.getDate() + 'T';\n    }\n    isoLocalTime += date.toLocaleTimeString();\n    console.log('Mi ISOtimeString', isoLocalTime);\n    return isoLocalTime;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZm8tbWVzYS9pbmZvLW1lc2EucGFnZS5zY3NzIn0= */\";","export default \"<ion-content class=\\\"fondo\\\">\\n  <ion-grid fixed id=\\\"container\\\" class=\\\"contenido\\\">\\n    <ion-row *ngIf=\\\"pedido\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-justify-content-center\\\">\\n        <!-- Aca debería ir el componente con la reserva actual -->\\n        <app-detalle-reserva [reserva]=\\\"pedido\\\" class=\\\"ion-no-margin\\\"></app-detalle-reserva>\\n        <app-detalle-pedido [pedido]=\\\"pedido\\\" class=\\\"ion-no-margin\\\"></app-detalle-pedido>\\n\\n        <ion-button (click)=\\\"consultarAlMozo()\\\" expand=\\\"full\\\"\\n                    class=\\\"ion-no-margin\\\" color=\\\"tertiary\\\" size=\\\"large\\\">\\n          Consultar al mozo\\n        </ion-button>\\n        <ion-button (click)=\\\"verEncuesta()\\\" expand=\\\"full\\\"\\n                    class=\\\"ion-no-margin\\\" color=\\\"dark\\\" size=\\\"large\\\">\\n          Realizar encuesta\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"!pedido\\\">\\n      <ion-col size=\\\"12\\\">\\n        <div id=\\\"container\\\" class=\\\"contenido\\\">\\n          <ion-label>\\n            <h1>\\n              <strong>Usted no está asignado a esta mesa</strong>\\n            </h1>\\n          </ion-label>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Cliente } from 'src/app/clases/cliente';\nimport { Mesa } from 'src/app/clases/mesa';\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\nimport { Usuario } from 'src/app/clases/usuario';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ClienteService } from 'src/app/services/cliente.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { MesaService } from 'src/app/services/mesa.service';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { SalaChatPage } from '../sala-chat/sala-chat.page';\n\n@Component({\n  selector: 'app-info-mesa',\n  templateUrl: './info-mesa.page.html',\n  styleUrls: ['./info-mesa.page.scss'],\n})\nexport class InfoMesaPage implements OnInit\n{\n  cliente: Cliente;\n  pedido: Pedido = new Pedido();\n  horaActual: Date;\n\n  constructor(private route: ActivatedRoute, private router: Router, private mesaService: MesaService,\n    private clienteService: ClienteService, private pedidoService: PedidoService,\n    private dateService: DateService, private modalController: ModalController) \n  {\n\n    //this.buscarReserva(\"-MLOssaEI7D5pr7Q8OMl\");\n  }\n\n  ngOnInit() \n  {\n    this.cliente = <Cliente>AuthService.usuario;\n    // Se recibe id de Mesa asignada y id de Cliente\n    // this.route.params.subscribe(params =>\n    // {\n    //   console.log(params['id']);\n    //   this.buscarReserva(params['id']);\n    // });\n\n    // Codigo para testing\n    this.buscarReserva(\"-MLOssaEI7D5pr7Q8OMl\");\n  }\n\n  buscarReserva(id: string)\n  {\n    let horaActual = new Date();\n    // Se debería traer Entidad con información sobre Pedido y Cliente de Mesa\n\n    this.pedido = PedidoService.pedidos.filter(pedido =>\n    {\n      console.log(pedido)\n      // Agregar validacion de hora actual\n      if (pedido.cliente && pedido.mesa)\n      {\n        return pedido.estado == EstadoPedido.ASIGNADO &&\n          pedido.mesa.id === id &&\n          pedido.cliente.id == this.cliente.id;\n      }\n    })[0];\n    console.log(this.pedido);\n  }\n\n  confirmarRecepcion()\n  {\n\n  }\n\n  pagarCuenta()\n  {\n\n  }\n\n  verEncuesta()\n  {\n    console.log(\"Ver encuesta\");\n  }\n\n  async consultarAlMozo()\n  {\n    const modal = await this.modalController.create({\n      component: SalaChatPage,\n    });\n\n    await modal.present();\n  }\n\n\n\n  compararFechas(fechaA: Date, fechaB: Date)\n  {\n    console.log(\"Fecha A - Fecha pedido\");\n    console.log(fechaA);\n    console.log(\"Fecha B- Fecha actual\");\n    console.log(fechaB);\n\n    if (fechaA.getFullYear() == fechaB.getFullYear() &&\n      fechaA.getMonth() === fechaB.getMonth() &&\n      fechaA.getDate() === fechaB.getMonth() &&\n      fechaA.getHours() === fechaB.getHours())\n    {\n      return true;\n    }\n    return false;\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InfoMesaPage } from './info-mesa.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InfoMesaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InfoMesaPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}