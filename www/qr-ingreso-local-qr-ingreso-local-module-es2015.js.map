{"version":3,"sources":["./src/app/pages/qr-ingreso-local/qr-ingreso-local-routing.module.ts","./src/app/pages/qr-ingreso-local/qr-ingreso-local.module.ts","./src/app/pages/qr-ingreso-local/qr-ingreso-local.page.ts","./src/app/pages/qr-ingreso-local/qr-ingreso-local.page.html","./src/app/pages/qr-ingreso-local/qr-ingreso-local.page.scss"],"names":[],"mappings":"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","file":"qr-ingreso-local-qr-ingreso-local-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { QrIngresoLocalPage } from './qr-ingreso-local.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QrIngresoLocalPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class QrIngresoLocalPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { QrIngresoLocalPageRoutingModule } from './qr-ingreso-local-routing.module';\r\n\r\nimport { QrIngresoLocalPage } from './qr-ingreso-local.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    QrIngresoLocalPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [QrIngresoLocalPage]\r\n})\r\nexport class QrIngresoLocalPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Cliente } from 'src/app/clases/cliente';\r\nimport { Mesa } from 'src/app/clases/mesa';\r\nimport { IListaEspera } from 'src/app/interfaces/IListaEspera';\r\nimport { CodigoQRService } from 'src/app/services/codigo-qr.service';\r\nimport { MesaService } from 'src/app/services/mesa.service';\r\n\r\n@Component({\r\n  selector: 'app-qr-ingreso-local',\r\n  templateUrl: './qr-ingreso-local.page.html',\r\n  styleUrls: ['./qr-ingreso-local.page.scss'],\r\n})\r\nexport class QrIngresoLocalPage implements OnInit\r\n{\r\n  reservas:Array<any>;\r\n  mesas:Array<Mesa>;\r\n  listaEspera:Array<IListaEspera>;\r\n  constructor(\r\n    private scannerService: CodigoQRService,\r\n    private mesasService:MesaService,\r\n    private router: Router,\r\n    private toastController: ToastController\r\n  ) { }\r\n\r\n  ngOnInit()\r\n  {\r\n  }\r\n\r\n  escanear()\r\n  {\r\n    this.scannerService.escanear(\"Escanear qr ingreso\", 'PDF_417').then((data) =>\r\n    {\r\n      console.log(data);\r\n\r\n\r\n      // VERIFICO CODIGO QR\r\n      if (data.text == \"IngresoLocal\")\r\n      {\r\n        //Buscar usuario actual del servicio de usuarios o auth o donde lo pongan y verificar con los datos que se guarden (seguramente el email) y perfil\r\n        let usuarioLogueado = JSON.parse(sessionStorage.getItem(\"usuario\"));\r\n\r\n        if (usuarioLogueado instanceof Cliente)//si es un cliente...\r\n        {\r\n          //puede ser cliente o anonimo \r\n          //ademas puede tener una mesa reservada o no\r\n          let tieneMesa: boolean = false;\r\n          let nroMesa: number;\r\n          //deberia checkiar las reservas \r\n          this.reservas.forEach(reserva =>\r\n          {\r\n            if (reserva.cliente == usuarioLogueado.correo)\r\n            {\r\n              tieneMesa = true;\r\n              nroMesa = reserva.mesa.numero;\r\n            }\r\n          });\r\n          if (tieneMesa)\r\n          {\r\n            this.presentToast(\"Usted tiene asignada la mesa\" + nroMesa, 2000);\r\n          } else //No tiene mesa le asigno una\r\n          {\r\n            let estaEnLista: boolean = false;\r\n            //verifico si ya esta en la lista de espera (en caso de que escanee dos veces)\r\n            this.listaEspera.forEach(lista =>\r\n            {\r\n              if (lista.cliente.dni == usuarioLogueado.dni) ///Deberia verificar por correo que es individual por usuario. Si es anonimo (ver las opciones de FireAuth para usuarios anonimos).\r\n              {\r\n                estaEnLista = true;\r\n              }\r\n            });\r\n            if (estaEnLista)\r\n            {\r\n              this.presentToast(\"Usted ya se encuentra en lista de espera\", 2000);\r\n            } else\r\n            {\r\n              // lo pongo en la lista con sus datos\r\n              let datos: any = { 'cliente':usuarioLogueado};\r\n              //Pushear la lista a la base\r\n              //Y lo mando a la page de encuestas de antiguos usuario\r\n            }\r\n          }\r\n        } else// Es un empleado\r\n        {\r\n          //\r\n        }\r\n      } else //No es un codigo de ingreso\r\n      {\r\n        this.presentToast('El codigo QR no pertenece al ingreso', 2000);\r\n      }\r\n    }, (err) =>//Onrejected qr scaner\r\n    {\r\n      console.log(\"Error: \" + err);\r\n    });\r\n\r\n    this.traerListaEspera();\r\n  }\r\n\r\n  async presentToast(message, duration)\r\n  {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration,\r\n    });\r\n    toast.present();\r\n  }\r\n  traerMesas()\r\n  {\r\n    this.mesasService.leer().then(mesas =>\r\n    {\r\n      this.mesas = mesas;\r\n    });\r\n  }\r\n  TraerReservas(){\r\n\r\n  }\r\n\r\n  traerListaEspera()\r\n  {\r\n    //traer lalista de espera.\r\n  }\r\n\r\n}\r\n","export default \"<app-header titulo=\\\"Qr Ingreso\\\" paginaAnterior='/tabs/tab1'></app-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-button color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"escanear()\\\">Escanear</ion-button>\\r\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3FyLWluZ3Jlc28tbG9jYWwvcXItaW5ncmVzby1sb2NhbC5wYWdlLnNjc3MifQ== */\";"],"sourceRoot":"webpack:///"}