{"version":3,"sources":["./src/app/pages/info-mesa/info-mesa.module.ts","./src/app/services/date.service.ts","./src/app/pages/info-mesa/info-mesa.page.scss","./src/app/pages/info-mesa/info-mesa.page.html","./src/app/pages/info-mesa/info-mesa.page.ts","./src/app/pages/info-mesa/info-mesa-routing.module.ts"],"names":[],"mappings":"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","file":"info-mesa-info-mesa-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { InfoMesaPageRoutingModule } from './info-mesa-routing.module';\r\n\r\nimport { InfoMesaPage } from './info-mesa.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    InfoMesaPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [InfoMesaPage]\r\n})\r\nexport class InfoMesaPageModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DateService\r\n{\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * convierte un objeto Date a timeStamp\r\n   * @param date \r\n   */\r\n  toTimeStamp(date: Date)\r\n  {\r\n    return date.getTime() / 1000000;\r\n  }\r\n\r\n  toDate(timeStamp)\r\n  {\r\n    let date = new Date(timeStamp * 1000000);\r\n    return date;\r\n  }\r\n\r\n  /**\r\n   * Convierte fecha en formato ISO a objeto Date con fecha local\r\n   * @param stringISO Fecha en formato ISO string\r\n   */\r\n  getDateObject(stringISO: string)\r\n  {\r\n    let timeStamp = Date.parse(stringISO);\r\n\r\n    let fecha = new Date(timeStamp);\r\n\r\n    let anio = fecha.getFullYear();\r\n    let mes = fecha.getMonth();\r\n    let dia = fecha.getDate();\r\n    let horas = fecha.getHours();\r\n    let minutos = fecha.getMinutes();\r\n\r\n    let newDate = new Date(anio, mes - 1, dia, horas, minutos, 0, 0);\r\n    return newDate;\r\n  }\r\n\r\n  /**Funcion para agregar minutos a un timeStamp\r\n * @param timeStamp TimeStamp\r\n * @param minutosAAgregar Minutos a agregar\r\n * @returns TimeStamp con los minutos agregados\r\n */\r\n  sumarMinutos(timeStamp, minutosASumar): number\r\n  {\r\n    let nuevoHorario = timeStamp + (minutosASumar * 60);\r\n    return nuevoHorario;\r\n  }\r\n\r\n  restarMinutos(timeStamp, minutosARestar): number\r\n  {\r\n    let nuevoHorario = timeStamp - (minutosARestar * 60);\r\n    return nuevoHorario;\r\n  }\r\n\r\n  /**\r\n   * Obtiene fecha local en formato ISO string\r\n   * @param date \r\n   */\r\n  getIsoLocalTime(date)\r\n  {\r\n    let isoLocalTime = date.getFullYear().toString() + '-';\r\n    if ((date.getMonth() + 1) < 10)\r\n    {\r\n      isoLocalTime += '0' + (date.getMonth() + 1) + '-';\r\n    } else\r\n    {\r\n      isoLocalTime += (date.getMonth() + 1) + '-';\r\n    }\r\n    if (date.getDate() < 10)\r\n    {\r\n      isoLocalTime += '0' + (date.getDate()) + 'T';\r\n    }\r\n    else\r\n    {\r\n      isoLocalTime += date.getDate() + 'T';\r\n    }\r\n    isoLocalTime += date.toLocaleTimeString();\r\n    console.log('Mi ISOtimeString', isoLocalTime);\r\n    return isoLocalTime;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZm8tbWVzYS9pbmZvLW1lc2EucGFnZS5zY3NzIn0= */\";","export default \"<ion-content class=\\\"fondo\\\">\\r\\n  <ion-grid fixed id=\\\"container\\\">\\r\\n    <ion-row *ngIf=\\\"pedido\\\">\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-justify-content-center\\\">\\r\\n        <!-- Aca debería ir el componente con la reserva actual -->\\r\\n        <app-detalle-reserva [reserva]=\\\"pedido\\\"></app-detalle-reserva>\\r\\n        <app-detalle-pedido [pedido]=\\\"pedido\\\"></app-detalle-pedido>\\r\\n        <ion-button (click)=\\\"consultarAlMozo()\\\" expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\r\\n          Consultar al mozo\\r\\n        </ion-button>\\r\\n        <ion-button (click)=\\\"verEncuesta()\\\" expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\r\\n          Realizar encuesta\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row *ngIf=\\\"!pedido\\\">\\r\\n      <ion-col size=\\\"12\\\">\\r\\n        <div id=\\\"container\\\">\\r\\n          <ion-label>\\r\\n            <h1>\\r\\n              <strong>Usted no está asignado a esta mesa</strong>\\r\\n            </h1>\\r\\n          </ion-label>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Mesa } from 'src/app/clases/mesa';\r\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\r\nimport { Usuario } from 'src/app/clases/usuario';\r\nimport { ClienteService } from 'src/app/services/cliente.service';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { MesaService } from 'src/app/services/mesa.service';\r\nimport { PedidoService } from 'src/app/services/pedido.service';\r\n\r\n@Component({\r\n  selector: 'app-info-mesa',\r\n  templateUrl: './info-mesa.page.html',\r\n  styleUrls: ['./info-mesa.page.scss'],\r\n})\r\nexport class InfoMesaPage implements OnInit\r\n{\r\n  usuario: Usuario;\r\n  pedido: Pedido;\r\n  horaActual: Date;\r\n\r\n  constructor(private route: ActivatedRoute, private mesaService: MesaService,\r\n    private clienteService: ClienteService, private pedidoService: PedidoService,\r\n    private dateService: DateService) \r\n  {\r\n    // Se recibe id de Mesa asignada y id de Cliente\r\n    // this.route.params.subscribe(params =>\r\n    // {\r\n    //   console.log(params['id']);\r\n    //   this.buscarReserva(params['id']);\r\n    //   //this.clienteService.fetch(idCliente)\r\n    // });\r\n    //\r\n    // Codigo para testing\r\n    this.buscarReserva(\"-MLOssaEI7D5pr7Q8OMl\");\r\n  }\r\n\r\n  ngOnInit() \r\n  {\r\n  }\r\n\r\n  async buscarReserva(id: string)\r\n  {\r\n    let horaActual = new Date();\r\n    // Se debería traer Entidad con información sobre Pedido y Cliente de Mesa\r\n\r\n    this.pedido = PedidoService.pedidos.filter(pedido =>\r\n    {\r\n      // Agregar validacion de hora actual\r\n      if (pedido.cliente && pedido.mesa)\r\n      {\r\n        return pedido.estado == EstadoPedido.RESERVADO &&\r\n          this.compararFechas(this.dateService.toDate(pedido.fechaInicio), horaActual) &&\r\n          pedido.mesa.id === id &&\r\n          pedido.cliente.id == this.usuario.id;\r\n      }\r\n    })[0];\r\n  }\r\n\r\n  verEncuesta()\r\n  {\r\n    console.log(\"Ver encuesta\");\r\n  }\r\n\r\n  consultarAlMozo()\r\n  {\r\n\r\n  }\r\n\r\n  compararFechas(fechaA: Date, fechaB: Date)\r\n  {\r\n    console.log(\"Fecha A - Fecha pedido\");\r\n    console.log(fechaA);\r\n    console.log(\"Fecha B- Fecha actual\");\r\n    console.log(fechaB);\r\n\r\n    if (fechaA.getFullYear() == fechaB.getFullYear() &&\r\n      fechaA.getMonth() === fechaB.getMonth() &&\r\n      fechaA.getDate() === fechaB.getMonth() &&\r\n      fechaA.getHours() === fechaB.getHours())\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InfoMesaPage } from './info-mesa.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: InfoMesaPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InfoMesaPageRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}