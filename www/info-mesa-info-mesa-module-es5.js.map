{"version":3,"sources":["webpack:///src/app/pages/info-mesa/info-mesa.module.ts","webpack:///src/app/services/date.service.ts","webpack:///src/app/pages/info-mesa/info-mesa.page.scss","webpack:///src/app/pages/info-mesa/info-mesa.page.html","webpack:///src/app/pages/info-mesa/info-mesa.page.ts","webpack:///src/app/pages/info-mesa/info-mesa-routing.module.ts"],"names":["InfoMesaPageModule","imports","declarations","DateService","date","getTime","timeStamp","Date","stringISO","parse","fecha","anio","getFullYear","mes","getMonth","dia","getDate","horas","getHours","minutos","getMinutes","newDate","minutosASumar","nuevoHorario","minutosARestar","isoLocalTime","toString","toLocaleTimeString","console","log","providedIn","InfoMesaPage","route","router","mesaService","clienteService","pedidoService","dateService","modalController","pedido","cliente","usuario","buscarReserva","id","horaActual","pedidos","filter","mesa","estado","ASIGNADO","create","component","modal","present","fechaA","fechaB","selector","template","routes","path","InfoMesaPageRoutingModule","forChild","exports"],"mappings":"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","file":"info-mesa-info-mesa-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InfoMesaPageRoutingModule } from './info-mesa-routing.module';\n\nimport { InfoMesaPage } from './info-mesa.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InfoMesaPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [InfoMesaPage]\n})\nexport class InfoMesaPageModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService\n{\n\n  constructor() { }\n\n  /**\n   * convierte un objeto Date a timeStamp\n   * @param date \n   */\n  toTimeStamp(date: Date)\n  {\n    return date.getTime() / 1000000;\n  }\n\n  toDate(timeStamp)\n  {\n    let date = new Date(timeStamp * 1000000);\n    return date;\n  }\n\n  /**\n   * Convierte fecha en formato ISO a objeto Date con fecha local\n   * @param stringISO Fecha en formato ISO string\n   */\n  getDateObject(stringISO: string)\n  {\n    let timeStamp = Date.parse(stringISO);\n\n    let fecha = new Date(timeStamp);\n\n    let anio = fecha.getFullYear();\n    let mes = fecha.getMonth();\n    let dia = fecha.getDate();\n    let horas = fecha.getHours();\n    let minutos = fecha.getMinutes();\n\n    let newDate = new Date(anio, mes - 1, dia, horas, minutos, 0, 0);\n    return newDate;\n  }\n\n  /**Funcion para agregar minutos a un timeStamp\n * @param timeStamp TimeStamp\n * @param minutosAAgregar Minutos a agregar\n * @returns TimeStamp con los minutos agregados\n */\n  sumarMinutos(timeStamp, minutosASumar): number\n  {\n    let nuevoHorario = timeStamp + (minutosASumar * 60);\n    return nuevoHorario;\n  }\n\n  restarMinutos(timeStamp, minutosARestar): number\n  {\n    let nuevoHorario = timeStamp - (minutosARestar * 60);\n    return nuevoHorario;\n  }\n\n  /**\n   * Obtiene fecha local en formato ISO string\n   * @param date \n   */\n  getIsoLocalTime(date)\n  {\n    let isoLocalTime = date.getFullYear().toString() + '-';\n    if ((date.getMonth() + 1) < 10)\n    {\n      isoLocalTime += '0' + (date.getMonth() + 1) + '-';\n    } else\n    {\n      isoLocalTime += (date.getMonth() + 1) + '-';\n    }\n    if (date.getDate() < 10)\n    {\n      isoLocalTime += '0' + (date.getDate()) + 'T';\n    }\n    else\n    {\n      isoLocalTime += date.getDate() + 'T';\n    }\n    isoLocalTime += date.toLocaleTimeString();\n    console.log('Mi ISOtimeString', isoLocalTime);\n    return isoLocalTime;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luZm8tbWVzYS9pbmZvLW1lc2EucGFnZS5zY3NzIn0= */\";","export default \"<ion-content class=\\\"fondo\\\">\\n  <ion-grid fixed id=\\\"container\\\" class=\\\"contenido\\\">\\n    <ion-row *ngIf=\\\"pedido\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-justify-content-center\\\">\\n        <!-- Aca debería ir el componente con la reserva actual -->\\n        <app-detalle-reserva [reserva]=\\\"pedido\\\" class=\\\"ion-no-margin\\\"></app-detalle-reserva>\\n        <app-detalle-pedido [pedido]=\\\"pedido\\\" class=\\\"ion-no-margin\\\"></app-detalle-pedido>\\n\\n        <ion-button (click)=\\\"consultarAlMozo()\\\" expand=\\\"full\\\"\\n                    class=\\\"ion-no-margin\\\" color=\\\"tertiary\\\" size=\\\"large\\\">\\n          Consultar al mozo\\n        </ion-button>\\n        <ion-button (click)=\\\"verEncuesta()\\\" expand=\\\"full\\\"\\n                    class=\\\"ion-no-margin\\\" color=\\\"dark\\\" size=\\\"large\\\">\\n          Realizar encuesta\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"!pedido\\\">\\n      <ion-col size=\\\"12\\\">\\n        <div id=\\\"container\\\" class=\\\"contenido\\\">\\n          <ion-label>\\n            <h1>\\n              <strong>Usted no está asignado a esta mesa</strong>\\n            </h1>\\n          </ion-label>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Cliente } from 'src/app/clases/cliente';\nimport { Mesa } from 'src/app/clases/mesa';\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\nimport { Usuario } from 'src/app/clases/usuario';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ClienteService } from 'src/app/services/cliente.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { MesaService } from 'src/app/services/mesa.service';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { SalaChatPage } from '../sala-chat/sala-chat.page';\n\n@Component({\n  selector: 'app-info-mesa',\n  templateUrl: './info-mesa.page.html',\n  styleUrls: ['./info-mesa.page.scss'],\n})\nexport class InfoMesaPage implements OnInit\n{\n  cliente: Cliente;\n  pedido: Pedido = new Pedido();\n  horaActual: Date;\n\n  constructor(private route: ActivatedRoute, private router: Router, private mesaService: MesaService,\n    private clienteService: ClienteService, private pedidoService: PedidoService,\n    private dateService: DateService, private modalController: ModalController) \n  {\n\n    //this.buscarReserva(\"-MLOssaEI7D5pr7Q8OMl\");\n  }\n\n  ngOnInit() \n  {\n    this.cliente = <Cliente>AuthService.usuario;\n    // Se recibe id de Mesa asignada y id de Cliente\n    // this.route.params.subscribe(params =>\n    // {\n    //   console.log(params['id']);\n    //   this.buscarReserva(params['id']);\n    // });\n\n    // Codigo para testing\n    this.buscarReserva(\"-MLOssaEI7D5pr7Q8OMl\");\n  }\n\n  buscarReserva(id: string)\n  {\n    let horaActual = new Date();\n    // Se debería traer Entidad con información sobre Pedido y Cliente de Mesa\n\n    this.pedido = PedidoService.pedidos.filter(pedido =>\n    {\n      console.log(pedido)\n      // Agregar validacion de hora actual\n      if (pedido.cliente && pedido.mesa)\n      {\n        return pedido.estado == EstadoPedido.ASIGNADO &&\n          pedido.mesa.id === id &&\n          pedido.cliente.id == this.cliente.id;\n      }\n    })[0];\n    console.log(this.pedido);\n  }\n\n  confirmarRecepcion()\n  {\n\n  }\n\n  pagarCuenta()\n  {\n\n  }\n\n  verEncuesta()\n  {\n    console.log(\"Ver encuesta\");\n  }\n\n  async consultarAlMozo()\n  {\n    const modal = await this.modalController.create({\n      component: SalaChatPage,\n    });\n\n    await modal.present();\n  }\n\n\n\n  compararFechas(fechaA: Date, fechaB: Date)\n  {\n    console.log(\"Fecha A - Fecha pedido\");\n    console.log(fechaA);\n    console.log(\"Fecha B- Fecha actual\");\n    console.log(fechaB);\n\n    if (fechaA.getFullYear() == fechaB.getFullYear() &&\n      fechaA.getMonth() === fechaB.getMonth() &&\n      fechaA.getDate() === fechaB.getMonth() &&\n      fechaA.getHours() === fechaB.getHours())\n    {\n      return true;\n    }\n    return false;\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InfoMesaPage } from './info-mesa.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InfoMesaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InfoMesaPageRoutingModule {}\n"]}