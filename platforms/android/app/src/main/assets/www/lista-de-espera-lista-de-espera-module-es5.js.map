{"version":3,"sources":["webpack:///src/app/pages/lista-de-espera/lista-de-espera.page.scss","webpack:///src/app/pages/lista-de-espera/lista-de-espera.module.ts","webpack:///src/app/pages/lista-de-espera/lista-de-espera-routing.module.ts","webpack:///src/app/pages/lista-de-espera/lista-de-espera.page.html","webpack:///src/app/pages/lista-de-espera/lista-de-espera.page.ts"],"names":["ListaDeEsperaPageModule","imports","declarations","routes","path","component","ListaDeEsperaPageRoutingModule","forChild","exports","ListaDeEsperaPage","clienteService","UIVisual","pedidosService","mesasService","asignandoMesa","leer","then","clientes","filter","cliente","enListaDeEspera","console","log","mesas","actualizar","ok","presentToast","clienteActual","presentAlert","nombre","mesa","mensaje","numero","crear","CrearPedido","Date","now","RESERVADO","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCqBFA,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DAVnC,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,8FAJO,EAKP,qFALO,CADD;AAQRC,oBAAY,EAAE,CAAC,uEAAD;AARN,OAAT,CAUmC,GAAvBF,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBb,UAAMG,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,8BAA8B;AAAA;AAAA,O;;AAA9BA,oCAA8B,6DAJ1C,+DAAS;AACRL,eAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI0C,GAA9BF,8BAA8B,CAA9B;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFG,iBAAiB;AAQ5B,mCACUC,cADV,EAEUC,QAFV,EAGUC,cAHV,EAIUC,YAJV,EAIkC;AAAA;;AAAA;;AAHxB,eAAAH,cAAA,GAAAA,cAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AATV,eAAAC,aAAA,GAAwB,KAAxB;AAYE,eAAKJ,cAAL,CAAoBK,IAApB,GAA2BC,IAA3B,CAAgC,UAAAC,QAAQ,EAAE;AACxC,iBAAI,CAACA,QAAL,GAAgBA,QAAQ,CAACC,MAAT,CAAgB,UAAAC,OAAO;AAAA,qBAAIA,OAAO,CAACC,eAAR,IAA2B,IAA/B;AAAA,aAAvB,CAAhB;AACAC,mBAAO,CAACC,GAAR,CAAY,KAAI,CAACL,QAAjB;AACD,WAHD;AAIA,eAAKJ,YAAL,CAAkBE,IAAlB,GAAyBC,IAAzB,CAA8B,UAAAO,KAAK,EAAE;AACpC,iBAAI,CAACA,KAAL,GAAaA,KAAb;AAAkB;AAClB,WAFD;AAID;;AAvB2B;AAAA;AAAA,sCAyBnB;AAEP,iBAAKN,QAAL,GAAgB,gFAAeA,QAAf,CAAwBC,MAAxB,CAA+B,UAAAC,OAAO;AAAA,qBAAIA,OAAO,CAACC,eAAR,IAA2B,IAA/B;AAAA,aAAtC,CAAhB;AACA,iBAAKG,KAAL,GAAa,0EAAYA,KAAzB;AAA+B;AAChC;AA7B2B;AAAA;AAAA,qCAgCjB,CAGV;AAnC2B;AAAA;AAAA,0CAqCZJ,OArCY,EAqCG;AAC7BA,mBAAO,CAACC,eAAR,GAA0B,KAA1B;AACA,iBAAKV,cAAL,CAAoBc,UAApB,CAA+BL,OAA/B,EAAwCH,IAAxC,CAA6C,UAAAS,EAAE,EAAE;AAC/C,gGAAgBC,YAAhB,CAA6B,yBAA7B;AACD,aAFD;AAGD;AA1C2B;AAAA;AAAA,mCA4CnBP,OA5CmB,EA4CJ;AACtB,iBAAKQ,aAAL,GAAqBR,OAArB;AACA,iBAAKL,aAAL,GAAqB,IAArB;AACA,8FAAgBc,YAAhB,CAA6B,aAAWT,OAAO,CAACU,MAAhD,EAAuD,kBAAvD;AACD;AAhD2B;AAAA;AAAA,sCAkDhBC,IAlDgB,EAkDP;AAAA;;AACnB,gBAAIC,OAAO,GAAG,UAAQD,IAAI,CAACE,MAAb,GAAqB,YAAnC;AACA,iBAAKpB,cAAL,CAAoBqB,KAApB,CAA0B,6DAAOC,WAAP,CAAmB,EAAnB,EAAsB,KAAKP,aAA3B,EAAyCG,IAAzC,EAA8C,IAA9C,EAAmDK,IAAI,CAACC,GAAL,EAAnD,EAA8D,IAA9D,EAAmE,IAAnE,EAAwE,mEAAaC,SAArF,EAA+F,IAA/F,CAA1B,EAAgIrB,IAAhI,CAAqI,YAAI;AACvI;AACA,gGAAgBY,YAAhB,CAA6B,eAA7B,EAA6CG,OAA7C;AACA,oBAAI,CAACjB,aAAL,GAAqB,KAArB;AACD,aAJD;AAMD;AA1D2B;;AAAA;AAAA,S;;;;gBAVrB;;gBAGA;;gBADA;;gBADA;;;;AASIL,uBAAiB,6DAL7B,gEAAU;AACT6B,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR,6EAFS;;AAAA,OAAV,CAK6B,GAAjB9B,iBAAiB,CAAjB","file":"lista-de-espera-lista-de-espera-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xpc3RhLWRlLWVzcGVyYS9saXN0YS1kZS1lc3BlcmEucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ListaDeEsperaPageRoutingModule } from './lista-de-espera-routing.module';\r\n\r\nimport { ListaDeEsperaPage } from './lista-de-espera.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ListaDeEsperaPageRoutingModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [ListaDeEsperaPage]\r\n})\r\nexport class ListaDeEsperaPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListaDeEsperaPage } from './lista-de-espera.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListaDeEsperaPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ListaDeEsperaPageRoutingModule {}\r\n","export default \"<app-header titulo=\\\"Lista de espera\\\" paginaAnterior='/tabs/tab1'></app-header>\\r\\n<!-- <ion-grid *ngIf=\\\"!clientes\\\">\\r\\n  <ion-row justify-content-center align-items-center >\\r\\n    <div text-center>\\r\\n      <ion-text color=\\\"dark\\\"> <h4>NO HAY CLIENTES EN ESPERA</h4>   </ion-text>\\r\\n    </div>\\r\\n  </ion-row>\\r\\n</ion-grid> -->\\r\\n\\r\\n  <ion-toolbar color=\\\"light\\\" *ngIf=\\\"!asignandoMesa\\\">\\r\\n    <ion-title>Hay {{clientes.length}} clientes en espera</ion-title>\\r\\n  </ion-toolbar>\\r\\n<!-- <ion-content *ngIf=\\\"!asignandoMesa\\\">\\r\\n  <ion-grid >\\r\\n  <ion-row justify-content-center align-items-center >\\r\\n    <div text-center>\\r\\n      <ion-text color=\\\"dark\\\"><h1>Hay {{clientes.length}} clientes en espera</h1> </ion-text>\\r\\n    </div>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n</ion-content> -->\\r\\n\\r\\n<div *ngIf=\\\"!asignandoMesa\\\">\\r\\n  <ion-list *ngFor=\\\"let cliente of clientes\\\">\\r\\n  <ion-item>\\r\\n\\r\\n    <ion-item-sliding>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option color=\\\"danger\\\" expandable (click)=\\\"quitarDeLaLista(cliente)\\\">\\r\\n          Quitar de la lista\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>{{cliente.nombre}} {{cliente.apellido}}</ion-label>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"tertiary\\\" expandable (click)=\\\"verMesas(cliente)\\\">\\r\\n          Asignar Mesa\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-item>\\r\\n</ion-list>\\r\\n</div>\\r\\n\\r\\n<ion-content>\\r\\n  <app-listado-mesas *ngIf=\\\"asignandoMesa\\\" [mesas]=\\\"mesas\\\" (elegirMesa)=\\\"asignarMesa($event)\\\">\\r\\n</app-listado-mesas>\\r\\n</ion-content>\\r\\n\";","import { Component, DoCheck, OnInit } from '@angular/core';\r\nimport { Cliente } from 'src/app/clases/cliente';\r\nimport { Mesa } from 'src/app/clases/mesa';\r\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\r\nimport { ClienteService } from 'src/app/services/cliente.service';\r\nimport { MesaService } from 'src/app/services/mesa.service';\r\nimport { PedidoService } from 'src/app/services/pedido.service';\r\nimport { UIVisualService } from 'src/app/services/uivisual.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-de-espera',\r\n  templateUrl: './lista-de-espera.page.html',\r\n  styleUrls: ['./lista-de-espera.page.scss'],\r\n})\r\nexport class ListaDeEsperaPage implements OnInit , DoCheck\r\n{\r\n\r\n  asignandoMesa:boolean = false;\r\n  clientes: Cliente[];\r\n  mesas: Mesa[];\r\n  clienteActual:Cliente;\r\n\r\n  constructor(\r\n    private clienteService: ClienteService,\r\n    private UIVisual: UIVisualService,\r\n    private pedidosService:PedidoService,\r\n    private mesasService:MesaService,\r\n  )\r\n  {\r\n    this.clienteService.leer().then(clientes=>{\r\n      this.clientes = clientes.filter(cliente => cliente.enListaDeEspera == true);\r\n      console.log(this.clientes);\r\n    })\r\n    this.mesasService.leer().then(mesas=>{\r\n     this.mesas = mesas/* .filter(mesa=>{mesa.isAvailable == true}) */\r\n    })\r\n    \r\n  }\r\n\r\n  ngDoCheck(): void\r\n  {\r\n    this.clientes = ClienteService.clientes.filter(cliente => cliente.enListaDeEspera == true);\r\n    this.mesas = MesaService.mesas;/* .filter(mesa=>{mesa.isAvailable == true}) */\r\n  }\r\n\r\n\r\n  ngOnInit() \r\n  {\r\n\r\n  }\r\n\r\n  quitarDeLaLista(cliente:Cliente){\r\n    cliente.enListaDeEspera = false;\r\n    this.clienteService.actualizar(cliente).then(ok=>{\r\n      UIVisualService.presentToast('Removido correctamente.');\r\n    });\r\n  }\r\n\r\n  verMesas(cliente:Cliente){\r\n    this.clienteActual = cliente;\r\n    this.asignandoMesa = true;\r\n    UIVisualService.presentAlert('Cliente '+cliente.nombre,'Asigne una mesa.');\r\n  }\r\n\r\n  asignarMesa(mesa:Mesa){\r\n    let mensaje = 'Mesa:'+mesa.numero+ ' asignada.';    \r\n    this.pedidosService.crear(Pedido.CrearPedido('',this.clienteActual,mesa,null,Date.now(),null,null,EstadoPedido.RESERVADO,true)).then(()=>{\r\n      //Se envia push al cliente avisando que es su turno y un redireccionamiento al pedidos page\r\n      UIVisualService.presentAlert('Mesa Asignada',mensaje);\r\n      this.asignandoMesa = false;\r\n    })\r\n    \r\n  }\r\n\r\n}\r\n"]}