{"version":3,"sources":["webpack:///src/app/pages/menu-pedidos/menu-pedidos.module.ts","webpack:///src/app/pages/menu-pedidos/menu-pedidos-routing.module.ts","webpack:///src/app/pages/menu-pedidos/menu-pedidos.page.scss","webpack:///src/app/pages/menu-pedidos/menu-pedidos.page.html","webpack:///src/app/pages/menu-pedidos/menu-pedidos.page.ts"],"names":["MenuPedidosPageModule","imports","declarations","routes","path","component","MenuPedidosPageRoutingModule","forChild","exports","MenuPedidosPage","pedidoService","rolService","opcion","pedidos","pedidoElegido","filtrarPedidos","usuario","console","log","leer","then","event","detail","value","pedido","pedidosFiltrados","isClienteAceptado","filter","cliente","id","isEmpleado","estado","RESERVADO","isJefe","selector","template"],"mappings":"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","file":"menu-pedidos-menu-pedidos-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MenuPedidosPageRoutingModule } from './menu-pedidos-routing.module';\n\nimport { MenuPedidosPage } from './menu-pedidos.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MenuPedidosPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [MenuPedidosPage]\n})\nexport class MenuPedidosPageModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MenuPedidosPage } from './menu-pedidos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MenuPedidosPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MenuPedidosPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21lbnUtcGVkaWRvcy9tZW51LXBlZGlkb3MucGFnZS5zY3NzIn0= */\";","export default \"<app-header titulo=\\\"Menú Pedidos\\\"></app-header>\\n\\n<ion-segment value=\\\"Alta\\\" (ionChange)=\\\"seleccionarOpcion($event)\\\" scrollable color=\\\"success\\\">\\n  <ion-segment-button value=\\\"Listado\\\" *ngIf=\\\"!rolService.isCliente(usuario)\\\">\\n    <ion-label>Pedidos</ion-label>\\n  </ion-segment-button>\\n  <ion-segment-button value=\\\"Alta\\\">\\n    <ion-label>Alta</ion-label>\\n  </ion-segment-button>\\n  <ion-segment-button value=\\\"Baja\\\" *ngIf=\\\"pedidoElegido.isActive\\\">\\n    <ion-label>Baja</ion-label>\\n  </ion-segment-button>\\n  <ion-segment-button value=\\\"Modificación\\\" *ngIf=\\\"pedidoElegido.isActive\\\">\\n    <ion-label>Modificar</ion-label>\\n  </ion-segment-button>\\n</ion-segment>\\n\\n<ion-content class=\\\"fondo\\\">\\n\\n  <app-listado-pedidos *ngIf=\\\"opcion == 'Listado'\\\" [pedidos]=\\\"pedidos\\\"\\n                       (elegirPedido)=\\\"elegirPedido($event)\\\">\\n  </app-listado-pedidos>\\n\\n  <app-form-pedido *ngIf=\\\"opcion != 'Listado'\\\" [opcion]=\\\"opcion\\\" [pedido]=\\\"pedidoElegido\\\"></app-form-pedido>\\n\\n\\n</ion-content>\";","import { Component, DoCheck, OnInit } from '@angular/core';\nimport { EstadoPedido, Pedido } from 'src/app/clases/pedido';\nimport { Usuario } from 'src/app/clases/usuario';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { RolesService } from 'src/app/services/roles.service';\n\n@Component({\n  selector: 'app-menu-pedidos',\n  templateUrl: './menu-pedidos.page.html',\n  styleUrls: ['./menu-pedidos.page.scss'],\n})\nexport class MenuPedidosPage implements OnInit, DoCheck\n{\n  usuario: Usuario;\n  opcion: string = 'Listado';\n  pedidos: Pedido[] = PedidoService.pedidos;\n  pedidoElegido: Pedido = new Pedido();\n\n  constructor(private pedidoService: PedidoService, private rolService: RolesService) { }\n\n  ngDoCheck(): void\n  {\n    this.pedidos = this.filtrarPedidos(PedidoService.pedidos);\n  }\n\n  ngOnInit()\n  {\n    this.usuario = AuthService.usuario;\n    console.log(\"INIT\");\n\n    this.pedidoService.leer().then((pedidos) =>\n    {\n      this.pedidos = this.filtrarPedidos(pedidos);\n    });\n    this.pedidoElegido = new Pedido();\n  }\n\n  /**\n   * Metodo para seleccionar modo del form para ABM\n   * @param event Evento con el valor que determina modo del form\n   */\n  seleccionarOpcion(event)\n  {\n    console.log(event.detail.value);\n    this.opcion = event.detail.value;\n  }\n\n  /**\n   * Método para recibir pedido seleccionado\n   * @param pedido Pedido seleccionado desde listado \n   */\n  elegirPedido(pedido)\n  {\n    console.log(pedido);\n    this.pedidoElegido = pedido;\n  }\n\n  filtrarPedidos(pedidos: Pedido[])\n  {\n    let pedidosFiltrados = [];\n    console.log(pedidos);\n\n    // Pedidos del Cliente logueado\n    if (this.rolService.isClienteAceptado(this.usuario))\n    {\n      pedidosFiltrados = pedidos.filter(pedido => \n      {\n        if (pedido.cliente)\n        {\n          return pedido.cliente.id === this.usuario.id;\n        }\n      });\n    }\n    else if (this.rolService.isEmpleado(this.usuario)) // Pedidos para empleados\n    {\n      pedidosFiltrados = pedidos.filter(pedido => pedido.estado != EstadoPedido.RESERVADO);\n    }\n    else if (this.rolService.isJefe(this.usuario)) // Pedidos para jefes\n    {\n      pedidosFiltrados = pedidos.filter(pedido => pedido.estado == EstadoPedido.RESERVADO);\n    }\n    return pedidosFiltrados;\n  }\n}\n"]}